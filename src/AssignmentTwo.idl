module Assignment2 {
    struct Reading {
        long date;
        long time;
        string monitoring_station_name;
        long reading_value;
    };
    struct StationInfo {
        string monitoring_station_name;
        string monitoring_station_location;
    };
    struct ServerInfo {
        string local_server_name;
        string local_server_location;
    };
    typedef sequence<Reading> readings;
    typedef sequence<StationInfo> stationList;
    typedef sequence<ServerInfo> localServerList;
    struct Alert {
        string local_server_name;
        readings alerts;
    };
    interface MonitoringStation {
        Reading reading();
        readonly attribute readings reading_log;
        void set_reading();
        void set_info(in StationInfo info);
        StationInfo get_info();
        void_activate();
        void_deactivate();
        void_reset();
    };
    interface LocalServer {
        readonly attribute stationList connected_stations;
        ServerInfo get_localserver_info();
        void set_info(in ServerInfo info);
        readings all_readings();
        readings get_readings(in string monitoring_station_name)
        readings current_readings();
        readings alerts();
        void register_monitoring_station(in StationInfo info);
        void signal_alert(in Reading reading);
    };
    struct Agency {
            string agency_name;
            string agency_region;
            string agency_contact;
        };
    interface MonitoringCentre {
        readings all_readings();
        readings get_readings(in string local_server_name);
        readonly attribute serverList connected_local_servers;
        void register_local_server(in ServerInfo info);
        void unregister_local_server(in ServerInfo info);
        void signal_alert(in Alert alert);
        void register_agency(in Agency agency);
    };
};